<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util-3.0.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:component-scan base-package="com.takeaseat"/>
    <mvc:default-servlet-handler/>
    <mvc:resources mapping="/resources/**" location="/WEB-INF/resources/"/>
    <util:properties id="properties" location="classpath:application.properties"/>
    <mvc:annotation-driven/>
    <aop:aspectj-autoproxy/>

    <!--    VIEWS    -->

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <bean id="contentNegotiationManager"
          class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="favorParameter" value="true"/>
        <property name="ignoreAcceptHeader" value="false"/>
    </bean>

    <!--    EMF & TRANSACTION   -->

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalEntityManagerFactoryBean">
        <property name="persistenceUnitName" value="TakeASeat"/>
    </bean>

    <bean id="tManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <tx:annotation-driven transaction-manager="tManager"/>

    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>

    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>messages</value>
                <value>messages_en_US</value>
            </list>
        </property>
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="fallbackToSystemLocale" value="false"/>
    </bean>

    <!-- FORMS -->

    <alias name="defaultRegisterFormValidator" alias="registerFormValidator"/>
    <bean id="defaultRegisterFormValidator" class="com.takeaseat.controller.validator.RegisterFormValidator">
        <constructor-arg name="userService" ref="userService"/>
        <constructor-arg name="emailValidator" ref="emailValidator"/>
        <constructor-arg name="passwordValidator" ref="passwordValidator"/>
    </bean>

    <alias name="defaultRegisterForm" alias="registerForm"/>
    <bean id="defaultRegisterForm" class="com.takeaseat.controller.form.RegisterForm"/>

    <alias name="defaultUpdateProfileFormValidator" alias="updateProfileFormValidator"/>
    <bean id="defaultUpdateProfileFormValidator"
          class="com.takeaseat.controller.validator.UpdateProfileFormValidator">
        <constructor-arg name="passwordValidator" ref="passwordValidator"/>
        <constructor-arg name="userService" ref="userService"/>
    </bean>

    <alias name="defaultUpdateProfileForm" alias="updateProfileForm"/>
    <bean id="defaultUpdateProfileForm" class="com.takeaseat.controller.form.UpdateProfileForm"/>

    <alias name="defaultCreateRestaurantFormValidator" alias="createRestaurantFormValidator"/>
    <bean name="defaultCreateRestaurantFormValidator"
          class="com.takeaseat.controller.validator.CreateRestaurantFormValidator">

    </bean>

    <alias name="defaultCreateRestaurantForm" alias="createRestaurantForm"/>
    <bean name="defaultCreateRestaurantForm" class="com.takeaseat.controller.form.CreateRestaurantForm"/>

    <!-- VALIDATORS -->

    <bean name="emailValidator" class="com.takeaseat.validator.EmailValidator"/>

    <bean name="passwordValidator" class="com.takeaseat.validator.PasswordValidator"/>

    <!-- CONVERTER -->

    <bean name="mapper" class="org.modelmapper.ModelMapper"/>

    <bean name="converter" class="com.takeaseat.converter.Converter">
        <constructor-arg name="mapper" ref="mapper"/>
    </bean>

    <!-- MAIL -->

    <bean name="defaultEmailService" class="com.takeaseat.service.impl.EmailServiceImpl">
        <constructor-arg name="mailSender" ref="mailSender"/>
        <constructor-arg name="emailComposer" ref="emailComposer"/>
    </bean>

    <alias name="defaultMailSender" alias="mailSender"/>
    <bean name="defaultMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="smtp.gmail.com"/>
        <property name="port" value="587"/>
        <property name="username" value="takeaseatro@gmail.com"/>
        <property name="password" value="fvezsutbmkodewqk"/>
        <property name="javaMailProperties">
            <props>
                <prop key="mail.transport.protocol">smtp</prop>
                <prop key="mail.smtp.auth">true</prop>
                <prop key="mail.smtp.starttls.enable">true</prop>
                <prop key="mail.debug">false</prop>
                <prop key="mail.smtp.ssl.trust">smtp.gmail.com</prop>
                <prop key="mail.smtp.ssl.protocols">TLSv1.2</prop>
            </props>
        </property>
    </bean>

    <bean name="emailComposer" class="com.takeaseat.service.email.impl.EmailComposerImpl"/>

    <!-- PHOTO -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="20971520"/>
        <property name="maxInMemorySize" value="1048576"/>
    </bean>

    <!-- DAO -->

    <alias name="defaultUserDao" alias="userDao"/>
    <bean name="defaultUserDao" class="com.takeaseat.dao.impl.UserDaoImpl"/>

    <alias name="defaultRestaurantDao" alias="restaurantDao"/>
    <bean name="defaultRestaurantDao" class="com.takeaseat.dao.impl.RestaurantDaoImpl"/>

    <alias name="defaultMenuItemDao" alias="menuItemDao"/>
    <bean name="defaultMenuItemDao" class="com.takeaseat.dao.impl.MenuItemDaoImpl"/>

    <!-- SERVICE -->

    <alias name="defaultUserService" alias="userService"/>
    <bean name="defaultUserService" class="com.takeaseat.service.impl.UserServiceImpl">
        <constructor-arg name="userDao" ref="userDao"/>
        <constructor-arg name="registerFormUserConverter" ref="converter"/>
        <constructor-arg name="userUpdateProfileFormConverter" ref="converter"/>
        <constructor-arg name="bCryptPasswordEncoder" ref="bCrypt"/>
        <constructor-arg name="emailService" ref="defaultEmailService"/>
    </bean>

    <alias name="defaultRestaurantService" alias="restaurantService"/>
    <bean name="defaultRestaurantService" class="com.takeaseat.service.impl.RestaurantServiceImpl">
        <constructor-arg name="userService" ref="userService"/>
        <constructor-arg name="createRestaurantFormRestaurantConverter" ref="converter"/>
        <constructor-arg name="restaurantDao" ref="restaurantDao"/>
        <constructor-arg name="menuItemDao" ref="menuItemDao"/>
    </bean>
</beans>